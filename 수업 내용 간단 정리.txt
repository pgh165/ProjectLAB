
$ lsb_release
buster -> bullseye

$ uname -a
--> 5.10.103-v7l+ 데비안 리눅스 커널 버전 armv7-32bit

$ nproc
 --> cpu 코어수를 알려줌

$ htop
--> 윈도우관리자창처럼 실시간으로 cpu와 메모리 사용량을 알려줌(동적)

$ df-h
$ free-h
--> 명령어를 실행한 당시 cpu와 메모리 사용량을 알려줌(정적)

python def == c/c++ 생성자

ctrl / 주석처리 명령어 

$ pip(3) list
--> 설치되어있는 패키지 종류를 알려줌 
패키지 주소 --> /home/pi/.local/lib/python3.7/site-packages

thonny
 
paks 설치 주소
C:\Users\user\AppData\Roaming\Python\Python37\site-packages

$ git clone 사용

$ sudo apt install filezilla -y --> 리눅스에서 파일질라 설치



4/15
1) gTTS(Text to Speech)
2) STT

voice service
{
1. google assistant
2. amazon alexa
3. apple shiri
}

$ aplay(audio play) -l
--> 연결 가능한 스피커 리스트 검색

speaker card 1: device 0:

$ arecord(audio record) -l
--> 연결 가능한 마이크 검색


4/29
1) pip3 install -> 라이브러리 설치 명령어
--> /home/pi/local/lib/python3.7
라파에서는 .bashrc파일에
alias pip=pip3
alias python=python3 이 정의되어 있음

기본적으로 라파에서 파이썬은 3.7버전임
다른 버전을 사용하기 위해 anaconda(아나콘다)라는 가상환경 프로그램을 사용함
라파에서는 라이트버전인 miniconda를 사용함

2) anaconda에서 가상환경
아나콘다에서는 파이썬 3.9버전이 기본적으로 설치되어있음
시스템 환경 변수 편집 -> 고급 탭에 환경변수 -> path에 파이썬 버전 확인 가능

3)가상환경의 설치 위치 
--> C:\Users\user\anaconda3\envs

가상환경 만드는 명령어
--> conda create -n pgh_p38 python=3.8
--> C:\Users\user\anaconda3\envs\pgh_p38 //만든 가상환경의 위치

패키지 설치위치
-->C:\Users\user\anaconda3\envs\pgh_p38\Lib\site-packages

가상환경 변경
--> activate pgh_p38 //가상환경 활성화
--> deactivate //가상환경 비활성화

가상환경에 설치되어있는 패키지 목록 검색
--> pip list

파이썬에서 opencv 설치
--> pip install opencv-python

opencv 버전 확인
--> import 패키지 사용 명령어
--> cv2.__version__
--> exit() 파이썬 탈출 명령어

텐서플로우 설치
--> pip install tensorflow

텐서플로우 사용
--> import tensorflow as tf

4) python 에서 import tensorflow as tf가 무엇인지 조사

라파에서는 tensorflow 크기가 큼
그래서 tensorflow lite를 사용함

1.Keras

5) AI(인공신경망) 학습을 위한 package 

1. tensorflow(> pip install tenserflow) -> tensorflow + keras
--> 학습완료 -> model.h5 파일 생성 -> 다운로드
--> model.h5 사용(recall)하기 위해서는 tensorflow + keras가 필요함

keras_test.py를 사용하기 위해서
-->from tensorflow.keras.models import load_model
--> pip install pillow

티처블머신을 사용해서 얼굴인식을 해서 tts를 사용해서 작동하는지 연구